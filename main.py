import os
from session import leer_sesion, guardar_sesion
from sql_utils import (
    ejecutar_sql_desde_archivo,
    datos_ya_existen
)
from crud import (
    leer_departamentos,
    crear_departamento,
    actualizar_departamento,
    eliminar_departamento,
    leer_empleados,
    crear_empleado,
    eliminar_empleado,
    actualizar_salario
)

def menu():
    while True:
        print("\n--- MEN√ö CRUD SCOTT ---")
        print("1. Ver departamentos")
        print("2. Crear departamento")
        print("3. Actualizar departamento")
        print("4. Eliminar departamento")
        print("5. Ver empleados")
        print("6. Crear empleado")
        print("7. Eliminar empleado")
        print("8. Actualizar empleado")
        print("9. Insertar datos de prueba")
        print("10. Reiniciar base de datos")
        print("0. Salir")
        opcion = input("Selecciona una opci√≥n: ")

        if opcion == "1":
            leer_departamentos()

        elif opcion == "2":
            deptno = int(input("N√∫mero de departamento: "))
            dname = input("Nombre del departamento: ")
            loc = input("Ubicaci√≥n: ")
            crear_departamento(deptno, dname, loc)

        elif opcion == "3":
            deptno = int(input("Departamento a actualizar: "))
            nuevo_nombre = input("Nuevo nombre: ")
            nueva_loc = input("Nueva ubicaci√≥n: ")
            actualizar_departamento(deptno, nuevo_nombre, nueva_loc)
        
        elif opcion == "4":
            deptno = int(input("Departamento a eliminar: "))
            eliminar_departamento(deptno)
        
        elif opcion == "5":
            leer_empleados()
        
        elif opcion == "6":
            crear_empleado()

        elif opcion == "7":
            empno = int(input("ID del empleado a eliminar: "))
            eliminar_empleado(empno)

        elif opcion == "8":
            empno = int(input("ID del empleado a actualizar: "))
            nuevo_salario = float(input("Nuevo salario: "))
            actualizar_salario(empno, nuevo_salario)

        elif opcion == "9":
            if datos_ya_existen():
                print("‚ö†Ô∏è Ya existen datos en la base de datos. Si deseas recargar los de prueba, reinicia primero (opci√≥n 9).")
            
            else:
                confirmar = input("¬øDeseas insertar los datos de prueba? (S/N): ").strip().upper()
                if confirmar == "S":
                    ejecutar_sql_desde_archivo("sample_data.sql")

        elif opcion == "10":
            confirmar = input("‚ö†Ô∏è ¬øEst√°s seguro que deseas reiniciar TODA la base de datos? (S/N): ").strip().upper()
            if confirmar == "S":
                ejecutar_sql_desde_archivo("init_db.sql")
                insertar = input("¬øDeseas insertar datos de prueba? (S/N): ").strip().upper()
                if insertar == "S":
                    ejecutar_sql_desde_archivo("sample_data.sql")
                    
        elif opcion == "0":
            print("üëã Hasta luego.")
            guardar_sesion()
            break
        else:
            print("‚ùå Opci√≥n inv√°lida. Intenta de nuevo.")

if __name__ == "__main__":
    os.system('cls' if os.name == 'nt' else 'clear')  # Limpiar pantalla
    
    ultima = leer_sesion()
    if ultima:
        print(f"üëã Bienvenido de nuevo. Tu √∫ltima sesi√≥n fue el {ultima['fecha']} desde {ultima['sistema']}.")
        print("‚ÑπÔ∏è Si deseas reiniciar la base de datos, ve a la opci√≥n 9.")
    else:
        print("üëã Bienvenido por primera vez.")

    menu()